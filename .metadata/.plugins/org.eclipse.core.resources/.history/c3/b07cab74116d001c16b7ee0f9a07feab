package edu.kh.fin.member.model.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import edu.kh.fin.member.model.dao.MemberDAO;
import edu.kh.fin.member.model.vo.Member;

@Service //Service 비지니스로직임을 명시 + Bean 등록
public class MemberServiceImpl implements MemberService{

	@Autowired
	private MemberDAO dao;
	
	@Autowired
	private BCryptPasswordEncoder encoder;
	//Bean으로 등록된 BCryptPasswordEncoder 객체를 의존성 주입(DI)
	
	@Override
	public Member login(Member member) {
		System.out.println("서비스 Bean 등록 및 DI 성공");
		//BCrypt 암호화 원리 
		//평문에 추가적인 문자열을 임의로 붙여(salt)서 암호화를 진행 
		// 이를 비교할 수 있는 별도 메소드를 같이 제공 
		String encPw = encoder.encode(member.getMemberPw()); //평문을 암호화 
		
		System.out.println("암호화된 비밀번호 : " + encPw);
		

		//암호화된 비번 & 평문 비교하기
		//String temp = "$2a$10$mimg2fXVjFmBWYOz36eVMOrPEAQKaJQP/w6RL04zqzb2sVcktcfIu";
		//System.out.println(encoder.matches(member.getMemberPw(), temp));
				
		
		// 로그인 DAO호출 
		Member loginMember = dao.login(member.getMemberId());
		
		System.out.println(loginMember);
		
		return null;
	}
	
	
	

}
