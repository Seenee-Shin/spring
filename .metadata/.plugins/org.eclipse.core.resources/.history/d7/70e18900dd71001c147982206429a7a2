package edu.kh.fin.board.model.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import edu.kh.fin.board.model.dao.BoardDAO;
import edu.kh.fin.board.model.vo.Board;
import edu.kh.fin.board.model.vo.BoardImage;
import edu.kh.fin.board.model.vo.Category;
import edu.kh.fin.board.model.vo.Pagination;
import edu.kh.fin.common.Util;

@Service
public class BoardServiceImpl implements BoardService{

	@Autowired
	private BoardDAO dao;

	@Override
	public Pagination getPagination(int cp) {
		
		//전체 게시글 수 count
		int listCount = dao.getListCount();
		
		 return new Pagination(listCount, cp);
	}

	@Override
	public List<Board> selectBoardList(Pagination pagination) {
		return dao.selectBoardList(pagination);
	}

	@Override
	public Board selectBoard(int boardNo, int memberNo) {
		Board board = dao.selectBoard(boardNo);
		
		if(board != null && board.getMemberNo() != memberNo) {
			//조회수 증가 
			int result = dao.increaseReadCount(boardNo);
			
			if(result > 0) {
				//DB와 미리 조회된 board의 readCount 동기화
				board.setReadCount(board.getReadCount()+1);
			}
		}
		
		return dao.selectBoard(boardNo);
	}

	@Override
	public List<Category> selectCategory() {
		
		return dao.selectCategory();
	}

	
	//게시글 , 이미지 insert
	@Override
	public int insertBoard(Board board, List<MultipartFile> images, String webPath, String serverPath) {
		// title, content xss 방지 
		board.setBoardTitle(Util.XSS(board.getBoardTitle()));
		board.setBoardContent(Util.XSS(board.getBoardContent()));
		
		// content 개행문자 변경 
		board.setBoardContent(Util.changeNewLine(board.getBoardContent()));
		
		//image rename
		
		//DB insert DAO 수행후 반환(boardNo)
		// -> insert 후 PK값을 얻어오는 useGeneratedKeys,selectKey 사용 
		
		int boardNo = dao.insertBoard(board);
		
		System.out.println("insert boardNo : "+ boardNo);
		
		if(boardNo > 0) {
			//실제 업로드도니 이미지를 분별하여 list<Boardimages> imgList에 담기
			List<BoardImage> imgList = new ArrayList<BoardImage>();
			
			for(int i = 0 ; i<images.size(); i++) {
				//i == images index == level
				
				//각 인덱스 요소에 파일이 업로드 되었는지 검사
				if(images.get(i).getOriginalFilename().equals("")) {
					
				}
			}
		}
		return boardNo;
	}
}
