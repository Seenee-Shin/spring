<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   <!--  -->
   
   
   <!-- DBCP 사용을 위한 DataSource를 Bean으로 등록 -->
   <!-- DataSource란? : java에서 Connection Pool을 지원하기 위한 인터페이스 -->
   <!-- BasicDataSource : DataSource인터페이스를 구현한 클래스, 아파치 commons.dbcp2에서 제공 -->
   <!-- destroy-method="close" : 주어진 세션을 자동으로 반환(close)하라는 설정 -->
   <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">

      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
      <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
      <property name="username" value="kh_final"/>
      <property name="password" value="kh_final1234" />

      <!-- defaultAutoCommit: SQL 수행 후 자동 COMMIT 설정. (기본값 : true) -->
      <property name="defaultAutoCommit" value="false" />

      <!-- 커넥션 풀 설정 -->
      <property name="initialSize" value="10" /> <!-- 초기 커넥션 수, 기본 0 -->
      <property name="maxTotal" value="500" /> <!-- 최대 커넥션 수, 기본 8 -->
      <property name="maxIdle" value="100" /> <!-- 유휴 상태로 존재할 수 있는 커넥션 최대 수, 기본 8 -->
      <property name="minIdle" value="10" /> <!-- 유휴 상태로 존재할 수 있는 커넥션 최소 수, 기본 0 -->
      <property name="maxWaitMillis" value="-1" /> <!-- 예외 발생 전 커넥션이 반환 될 떄 까지 대기하는 최대 시간(ms), 기본 -1(무기한) -->

   </bean>
   
      <!-- SqlSession : sql구문을 DB에 전달, 실행하는 객체 connection 역할
      SqlSessionFactory : SqlSession을 만드는 객체 
      sqlSessionFactoryBean : mybatis 설정 파일(mybatis-config.xml)과 Connection Pool 정보를 이용하여 SqlSessionFactory를 만드는 객체 
      sqlSessionTemplate : SqlSession 객체에 트랜잭션 처리 역할이 가능하도록 하는 객체 -->
   
   <!-- 마이바티스 SqlSession 등록하기 (xml 방식으로 bean 등록) -->
   <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
      <!-- mybatis-config.xml 설정 불러오기 -->
      <property name="configLocation" value="classpath:mybatis-config.xml" />
      <property name="dataSource" ref="dataSource" />
   </bean>
   
   <!-- SqlSessionTemplate : 기본 SQL 실행 + 트랜잭션 관리 역할을 하는 SqlSession을 생성할 수 있게 하는 객체(Spring bean으로 등록해야함.) -->
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSessionFactoryBean" />
   </bean>
   
   <!-- 스프링에서 사용하는 proxy를 이용한 트랜잭션 제어가 안될 경우 추가적인 트랜잭션 매니저를 추가해서 문제 해결 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>
   
   <!-- @Transactional 어노테이션을 스캔, 인식 
   		namespaces 에서 tx체크하여 다운로드 후 작성-->
   <tx:annotation-driven/>
   
   <!-- 파일 업로드를 위한 multiepartResolver 구현체 Bean 등록 
   
   		multipart/form-date 요청시 input type="file" 요소를 자동으로 인식, 
   		multipart file 객체로 반환, 나머지 parameter는 기존 객체로 사용 
   -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   		<property name="maxUploadSize" value="104857600"/>
   		<property name="maxUploadSizePerFile" value="104857600"/>
   		<property name="maxInMemorySize" value="104857600"/>
   		
   		<!-- 
   		maxUploadSize : 한개의 요청 당 혀용되는 최대 용량 제한 (byte 단위, -1:무제한 (기본값))
   		maxUploadSizePerFile: 한개의 파일 당 허용 되는 최대용량 (byte 단위, -1:무제한 (기본값))
   		maxInMemorySize : disc에 저장되지 않고 memory에 유지하는 최대 용량 (byte 단위, 기본값 = 10240byte(10kb))
   						 지정된 용량을 초과할 경우 파일 자동 저장
   						 
   						 multipartRequest : 생성됨과 종시에 파일 저장 (실패해도 파일 저장)
   						 multipartResolver : DB를 수행하여도 memory에 파일 저장. DB성공 시에만 파일 저장 
   		 -->
   </bean>
   
   
   
   
</beans>
