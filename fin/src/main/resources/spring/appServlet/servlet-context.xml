<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure 
		DispatcherServlet
		-HTTP를 이요해 전달 받은 모든 요청을 프레젠테이션 계층의 모든 요청을 처리하는 프론트 컨트롤러 /응답을 제어 
		Handler Mapping(현재는 잘 이용하지 않음,  어노테이션으로 대체), View Resolver가 존재함	
		
		Handler Mapping : 요청 받은 주소를 매핑해 처리할 클래스 or 메소드 지정 	
	-->
	
	<!-- Enables the Spring MVC @Controller programming model 
		
		annotation - driven
		@Controller가 작성된 클래스에 요청을 전달하기 위해 HandlerMaooing을 Bean으로 등록함
		
		Bean : Spring에서 생성하고 관리하는 객체 
			- Bean으로 등록: Spring 컨테이너에 의해서 객체가 생성 / Spring이 제어
						  스프링이 해당 
	-->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="edu.kh.fin" />
	
	<!-- @Scheduled -->
	<task:annotation-driven/>
	
	<!-- websocket  -->
	<!-- Namespace에서 websocket 체크 -->
	<beans:bean id="chatHandler" class="edu.kh.fin.chat.websocket.ChatWebsocketHandler"/>
	
	<websocket:handlers >
		<!-- 웹소켓과 매핑할 요청 주소 -->
		<!-- path : SockJS 생성시 기입한 주소 -->
		<!-- handler : 연결한 beanId(chatHandler bean) -->
		<websocket:mapping handler="chatHandler" path="/chat"/>
		
		<!-- interceptors : http 요청 객체에서 request, reponse를 가로채는 역할 -->
		<!-- handshake-interceptors : HttpSession에 있는 값을 별도로 가로챈 후 연결된 클래스에 WebsocketSession 형태로 넣어줌 -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		<websocket:sockjs/>
		
	</websocket:handlers>
	
	<aop:aspectj-autoproxy/>
</beans:beans>
